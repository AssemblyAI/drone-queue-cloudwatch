---
kind: pipeline
type: docker
name: work

platform:
  os: linux
  arch: amd64

node:
  os: linux
  class: standard

trigger:
  event:
  - push
  branch:
  - main
  paths:
    exclude:
      - README.md
      - "terraform/**"
      - ".github/*"
      - .gitignore
      - .gitattributes


steps:
- name: build
  image: golang:1.16-stretch
  pull: if-not-present
  commands:
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main ./
  when:
    event:
    - push
    branch:
    - main

- name: publish
  pull: always
  image: public.ecr.aws/s7w0t2z5/docker:latest
  commands:
  - zip latest.zip main
  - zip ${DRONE_COMMIT_SHA:0:7}.zip main
  - aws s3 cp --acl public-read latest.zip s3://$BUCKET/$PROJECT_KEY/
  - aws s3 cp --acl public-read ${DRONE_COMMIT_SHA:0:7}.zip s3://$BUCKET/$PROJECT_KEY/
  environment:
    AWS_DEFAULT_REGION: us-west-2
    BUCKET: aai-oss
    PROJECT_KEY: drone-queue-cloudwatch
  when:
    event:
    - push
    branch:
    - main

- name: deploy
  pull: if-not-present
  image: public.ecr.aws/s7w0t2z5/docker:latest
  commands:
  # Better safe than debugging permission denied errors
  - chmod +x deploy/lambda.sh
  - deploy/lambda.sh
  environment:
    AWS_DEFAULT_REGION: us-west-2
    BUCKET: aai-oss
    PROJECT_KEY: drone-queue-cloudwatch
    FUNCTION_NAME: drone-queue-cloudwatch
  when:
    event:
    - push
    branch:
    - main
